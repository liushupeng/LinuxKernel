# 基础风格模板
BasedOnStyle: LLVM

# 支持语言
Language: Cpp

# 缩进风格
IndentWidth: 4
TabWidth: 4
UseTab: Never  # 统一使用空格

# 函数与控制结构的大括号位置
BreakBeforeBraces: Attach  # K&R -> SameLine / Allman -> NewLine（更清晰）
AllowShortLoopsOnASingleLine: false
AllowShortIfStatementsOnASingleLine: false
# 允许短的函数放在同一行: None, InlineOnly(定义在类中), Empty(空函数), Inline(定义在类中，空函数), All
AllowShortFunctionsOnASingleLine: All

# 空格设置
SpaceBeforeParens: ControlStatements  # `if (...)` 空格在控制结构后
SpacesInParentheses: false
SpaceAfterCStyleCast: true
SpacesInAngles: false

# 对齐与换行
AlignAfterOpenBracket: Align
AlignOperands: true
AlignTrailingComments: true
AlignConsecutiveDeclarations: true
AlignConsecutiveAssignments: true

# 指针对齐风格
PointerAlignment: Left  # int* p; 而不是 int *p;

# 参数换行风格
BinPackParameters: false
BinPackArguments: false
AllowAllParametersOfDeclarationOnNextLine: true

# 注释配置
CommentPragmas: '^ IWYU pragma:'

# 命名空间设置（主要用于 C++）
NamespaceIndentation: All

# include 排序
SortIncludes: true
IncludeBlocks: Preserve  # 保留空行分隔的 include block
IncludeCategories:
  - Regex: "^\".*\""         # 1. 项目本地头文件 "myfile.h"
    Priority: 1
    SortPriority: 0
    CaseSensitive: false

  - Regex: "^<c.*>"          # 2. C++ 标准库（以 <c 开头的，如 <cstdio>）
    Priority: 2
    SortPriority: 1

  - Regex: "^<(iostream|vector|string|map|set|memory|algorithm).*>"  # 3. 其他 C++ 标准库
    Priority: 3
    SortPriority: 2

  - Regex: "^<.*>"           # 4. 其他系统/第三方库头文件
    Priority: 4
    SortPriority: 3

  - Regex: ".*"              # 5. 兜底匹配（例如可能出错的包含）
    Priority: 5
    SortPriority: 4

# 空行控制
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 1

# 最大列宽
ColumnLimit: 100

# 启用对齐多个宏定义
AlignConsecutiveMacros: true
AllowShortBlocksOnASingleLine: false

# 控制在多行表达式中二元运算符（如 +, -, , && 等）的位置
BreakBeforeBinaryOperators: None

